name: "PHPCS checks"

on:
    workflow_call:
        inputs:
            runs-on:
                description: "Type of machine to run the job on"
                default: "ubuntu-24.04"
                required: false
                type: "string"
            php-version:
                description: "PHP version"
                default: "8.1"
                required: false
                type: "string"
            php-tools:
                description: "PHP tools (https://github.com/shivammathur/setup-php#wrench-tools-support)"
                default: ""
                required: false
                type: "string"
            php-extensions:
                description: "PHP extensions (https://github.com/shivammathur/setup-php#heavy_plus_sign-php-extension-support)"
                default: ""
                required: false
                type: "string"
            composer-ignore-cache:
                description: "Ignore Composer caching"
                default: false
                required: false
                type: "boolean"
            composer-root-version:
                description: "Composer root version"
                default: ""
                required: false
                type: "string"
            phpcs-bin:
                description: "Path to PHPCS binary"
                default: "./vendor/bin/phpcs"
                required: false
                type: "string"
            phpcs-args:
                description: "Set of arguments passed to PHPCS"
                default: ""
                required: false
                type: "string"
        secrets:
            AWS_ACCESS_KEY_ID:
                required: true
            AWS_SECRET_ACCESS_KEY:
                required: true
            AWS_SECURITY_GROUP_ID:
                required: true
            COMPOSER_AUTH_JSON:
                required: true

jobs:
    phpcs:
        name: "PHPCS"
        runs-on: "${{ inputs.runs-on }}"

        steps:
            -   name: "Checkout code"
                uses: "actions/checkout@v4"

            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ inputs.php-version }}"
                    coverage: "none"
                    tools: "${{ inputs.php-tools }}"
                    extensions: "${{ inputs.php-extensions }}"

            -   name: "Create unique ID"
                id: "unique-id"
                run: |
                    echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT

            -   name: "Add public IP to AWS security group"
                uses: "sohelamin/aws-security-group-add-ip-action@master"
                with:
                    aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
                    aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
                    aws-region: "eu-central-1"
                    aws-security-group-id: "${{ secrets.AWS_SECURITY_GROUP_ID }}"
                    port: "443"
                    to-port: "443"
                    protocol: "tcp"
                    description: "GitHub Action ${{ steps.unique-id.outputs.uuid }}"

            -   name: "Add auth.json file"
                run: "echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json"

            -   name: "Set COMPOSER_ROOT_VERSION env variable"
                run: |
                    echo "COMPOSER_ROOT_VERSION=${{ inputs.composer-root-version }}" >> $GITHUB_ENV
                if: "'' != inputs.composer-root-version"

            -   name: "Check out custom actions"
                uses: "actions/checkout@v4"
                with:
                    repository: "isign-dev/github-actions"
                    path: "./.github/actions/custom-actions"

            -   name: "Fix vendors"
                uses: "./.github/actions/custom-actions/.github/actions/composer-require-replacements"

            -   name: "Install dependencies with Composer"
                uses: "ramsey/composer-install@v3"
                with:
                    dependency-versions: "highest"
                    ignore-cache: "${{ inputs.composer-ignore-cache }}"

            -   name: "Run PHPCS"
                run: "${{ inputs.phpcs-bin }} ${{ inputs.phpcs-args }}"

            -   name: "Remove auth.json file"
                if: "always()"
                run: "rm -f $GITHUB_WORKSPACE/auth.json"
